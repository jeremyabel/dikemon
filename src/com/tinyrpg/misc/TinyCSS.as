package com.tinyrpg.misc {	import flash.text.Font;	import flash.utils.ByteArray;	/**	 * @author jeremyabel	 */	public class TinyCSS 	{		[Embed( source="../../../../bin/swf/Fonts.swf", fontFamily="kroeger 04_65_8pt_st" )]		public var Kroeger0465 : Class;		[Embed(source="../../../../bin/swf/Fonts.swf", fontFamily="mono 07_55_8pt_st")]		public var Mono0755 : Class;		[Embed(source="../../../../bin/swf/Fonts.swf", fontFamily="04b03_8pt_st")]		public var _04b03 : Class;		[Embed(source="../../../../bin/swf/Fonts.swf", fontFamily="dkmn0706 Regular_5pt_st")]		public var dkmn0706 : Class;		[Embed(source="../../../../bin/css/tinyrpg.css", mimeType="application/octet-stream")]		static private var styleCSS:Class;				public function TinyCSS()		{			this.enumerateFonts();							Font.registerFont(Mono0755);			Font.registerFont(Kroeger0465);			Font.registerFont(_04b03);			Font.registerFont(dkmn0706);		}				public function enumerateFonts() : void		{			var embeddedFonts : Array = Font.enumerateFonts();			embeddedFonts.sortOn("fontName", Array.CASEINSENSITIVE);			trace("\n----- Enumerate Fonts -----");			for(var i : int = 0;i < embeddedFonts.length;i++) {				var font : Font = embeddedFonts[i] as Font;				trace(font.fontName + ', ' + font.fontStyle + ', ' + font.fontType);			}			trace("---------------------------\n");		}				static public function get cssString() : String		{			var byteArray : ByteArray = new styleCSS() as ByteArray;			return byteArray.readUTFBytes(byteArray.length);		}	}}